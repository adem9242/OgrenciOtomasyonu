using System;
using System.Collections.Generic;
using System.ComponentModel;
using System.Data;
using System.Drawing;
using System.Linq;
using System.Text;
using System.Threading.Tasks;
using System.Windows.Forms;
using System.Data.Entity;
using OgrenciOtomasyonu.DataBase;
using System.Data.SqlClient;

namespace Anasayfa
{
    public partial class FrmTelefon_Rehberi : Form
    {
        public FrmTelefon_Rehberi()
        {
            InitializeComponent();

            // This line of code is generated by Data Source Configuration Wizard
            this.entityInstantFeedbackSource1.GetQueryable += entityInstantFeedbackSource1_GetQueryable;
            // This line of code is generated by Data Source Configuration Wizard
            this.entityInstantFeedbackSource1.DismissQueryable += entityInstantFeedbackSource1_DismissQueryable;
        }
        private void FrmTelefon_Rehberi_Load(object sender, EventArgs e)
        {
          
        }
        private void btncikis_Click(object sender, EventArgs e)
        {
            this.Close();
        }

        public void Listele()
        {
            entityInstantFeedbackSource1.Refresh();
            gridControl1.DataSource = null;
            gridControl1.DataSource = entityInstantFeedbackSource1;
            gridControl1.RefreshDataSource();

        }


        public void temizlik()
        {
            txt_adi.Text = "";
            txt_soyadi.Text = "";
            txt_evtel.Text = "";
            txt_ceptel.Text = "";
            txt_adres.Text = "";
            txtresim.Text = "";
            pictureBox1.ImageLocation = null;
        }



        // This event is generated by Data Source Configuration Wizard
        void entityInstantFeedbackSource1_GetQueryable(object sender, DevExpress.Data.Linq.GetQueryableEventArgs e)
        {

            // Instantiate a new DataContext
            OgrenciOtomasyonu.DataBase.TestDevexpresOgrenciOtomasyonEntities3 dataContext = new OgrenciOtomasyonu.DataBase.TestDevexpresOgrenciOtomasyonEntities3();
            // Assign a queryable source to the EntityInstantFeedbackSource
            e.QueryableSource = dataContext.TBL_TELEFONREHBERİ;
            // Assign the DataContext to the Tag property,
            // to dispose of it in the DismissQueryable event handler
            e.Tag = dataContext;
        }

        // This event is generated by Data Source Configuration Wizard
        void entityInstantFeedbackSource1_DismissQueryable(object sender, DevExpress.Data.Linq.GetQueryableEventArgs e)
        {

            // Dispose of the DataContext
            ((OgrenciOtomasyonu.DataBase.TestDevexpresOgrenciOtomasyonEntities3)e.Tag).Dispose();
        }

        private void btnresimsec_Click(object sender, EventArgs e)
        {
            openFileDialog1.ShowDialog();
            pictureBox1.ImageLocation = openFileDialog1.FileName;
            txtresim.Text = openFileDialog1.FileName;
        }

        private void btnkaydet_Click(object sender, EventArgs e)
        {

            if(gridView1.RowCount!=0)
            {
                string adi = Convert.ToString(gridView1.GetFocusedRowCellValue("ADINIZ"));
            }






            if (txt_adi.Text == "" || txt_soyadi.Text == "" || txt_evtel.Text == "" || txt_ceptel.Text == "" || txt_adres.Text == "")
            {
                DevExpress.XtraEditors.XtraMessageBox.Show("Boş Geçtiğiniz Alanlarınız Mevcuttur." + '\n' + "Lütfen Alanlarınızı Doldurun", "DİKKAT", MessageBoxButtons.OK, MessageBoxIcon.Stop);
            }
            else
            {
                using (TestDevexpresOgrenciOtomasyonEntities3 enti = new TestDevexpresOgrenciOtomasyonEntities3())
                {
                    TBL_TELEFONREHBERİ rh = new TBL_TELEFONREHBERİ();

                    rh.ADINIZ = txt_adi.Text;
                    rh.SOYADINIZ = txt_soyadi.Text;
                    rh.CEPTEL = txt_ceptel.Text;
                    rh.EVTEL = txt_evtel.Text;
                    rh.ADRES = txt_adres.Text;
                    rh.RESİM = txtresim.Text;
                    enti.TBL_TELEFONREHBERİ.Add(rh);
                    enti.SaveChanges();
                    Listele();
                    temizlik();
                }
            }
            
           
        }

        private void gridView1_FocusedRowChanged(object sender, DevExpress.XtraGrid.Views.Base.FocusedRowChangedEventArgs e)
        {
           
        }

        private void gridView1_RowClick(object sender, DevExpress.XtraGrid.Views.Grid.RowClickEventArgs e)
        {
            if (e.Button == MouseButtons.Right)
            {
                popup_REHBER.ShowPopup(Control.MousePosition);
            }
            else
            {
                txt_adi.Text = Convert.ToString(gridView1.GetFocusedRowCellValue("ADINIZ"));
                txt_soyadi.Text = Convert.ToString(gridView1.GetFocusedRowCellValue("SOYADINIZ"));
                txt_evtel.Text = Convert.ToString(gridView1.GetFocusedRowCellValue("EVTEL"));
                txt_ceptel.Text = Convert.ToString(gridView1.GetFocusedRowCellValue("CEPTEL"));
                txt_adres.Text = Convert.ToString(gridView1.GetFocusedRowCellValue("ADRES"));
                txtresim.Text = Convert.ToString(gridView1.GetFocusedRowCellValue("RESİM"));
                openFileDialog1.FileName = txtresim.Text;
                pictureBox1.ImageLocation = openFileDialog1.FileName;
               

            }
           
           





        }

        private void btnguncelle_Click(object sender, EventArgs e)
        {
            int ID = (int)gridView1.GetFocusedRowCellValue("ID");

          string cikis=     DevExpress.XtraEditors.XtraMessageBox.Show(""+ID+" numaralı Kaydınızı Güncellemek istediğinize Emin Misiniz? ", "DİKKAT", MessageBoxButtons.YesNo, MessageBoxIcon.Information).ToString();

            if (cikis==DialogResult.Yes.ToString())
            {
                
              
                using (TestDevexpresOgrenciOtomasyonEntities3 context = new TestDevexpresOgrenciOtomasyonEntities3())
                {
                    try
                    {
                        var query1 = (from contact in context.TBL_TELEFONREHBERİ
                                      where contact.ID == ID
                                      select contact).First();
                        query1.ADINIZ = txt_adi.Text;
                        query1.SOYADINIZ = txt_soyadi.Text;
                        query1.EVTEL = txt_evtel.Text;
                        query1.CEPTEL = txt_ceptel.Text;
                        query1.ADRES = txt_adres.Text;
                        query1.RESİM = txtresim.Text;
                        context.SaveChanges();
                       
                    }
                    catch (Exception hataTuru)
                    {
                        
                    }
                }
            }
            else
            {
                
            }
            Listele();
            temizlik();
        }

        private void btnsil_Click(object sender, EventArgs e)
        {
            int ID = (int)gridView1.GetFocusedRowCellValue("ID");
            string cikis = DevExpress.XtraEditors.XtraMessageBox.Show("" + ID + " numaralı Kaydınızı Silmek istediğinize Emin Misiniz? ", "DİKKAT", MessageBoxButtons.YesNo, MessageBoxIcon.Error).ToString();

            if (cikis == DialogResult.Yes.ToString())
            {
                using (TestDevexpresOgrenciOtomasyonEntities3 sil = new TestDevexpresOgrenciOtomasyonEntities3())
                {
                    TBL_TELEFONREHBERİ a = sil.TBL_TELEFONREHBERİ.SingleOrDefault(g => g.ID == ID);
                    sil.TBL_TELEFONREHBERİ.Remove(a);

                    sil.SaveChanges();
                    Listele();
                }
            }
            else { }
           

        }
    }
}
